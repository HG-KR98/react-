{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uD5CC\\uADDC\\\\Desktop\\\\\\uB9AC\\uC561\\uD2B8 \\uACF5\\uBD80\\\\react-\\\\react-route\\\\src\\\\App.js\";\nimport { createBrowserRouter, RouterProvider, createRoutesFromElements, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport ProductsPage from \"./pages/Products\";\nimport RootLayout from \"./pages/Root\";\nimport ErrorPage from \"./pages/Error\";\nimport ProductDetailPage from \"./pages/ProductDetail\";\n\n// const routeDefinitions = createRoutesFromElements(\n//   <Route>\n//     <Route path=\"/\" element={<HomePage />} />\n//     <Route path=\"/products\" element={<ProductsPage />} />\n//   </Route>\n// );\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 19\n  }, this),\n  children: [\n  // 부모 라우트의 경로에 대해 HomePage의 경로를 부모와 같게 설정하려면 \"\"으로도\n  // 설정할 수 있지만 index 라우트를 사용해도 된다.\n  {\n    path: \"\",\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 28\n    }, this)\n  }, {\n    path: \"products\",\n    element: /*#__PURE__*/_jsxDEV(ProductsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }, this)\n  }, {\n    path: \"products/:productId\",\n    element: /*#__PURE__*/_jsxDEV(ProductDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 47\n    }, this)\n  }\n\n  // { path: \"/\", element: <HomePage /> }, /가 있으면 절대 경로, 없으면 상대경로\n  // {\n  //   path: \"/products\",\n  //   element: <ProductsPage />,\n  // },\n  // { path: \"/products/:productId\", element: <ProductDetailPage /> },\n  ]\n}]);\n\n// const router = createBrowserRouter(routeDefinitions);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","createRoutesFromElements","Route","HomePage","ProductsPage","RootLayout","ErrorPage","ProductDetailPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","App","_c","$RefreshReg$"],"sources":["C:/Users/김헌규/Desktop/리액트 공부/react-/react-route/src/App.js"],"sourcesContent":["import {\n  createBrowserRouter,\n  RouterProvider,\n  createRoutesFromElements,\n  Route,\n} from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport ProductsPage from \"./pages/Products\";\nimport RootLayout from \"./pages/Root\";\nimport ErrorPage from \"./pages/Error\";\nimport ProductDetailPage from \"./pages/ProductDetail\";\n\n// const routeDefinitions = createRoutesFromElements(\n//   <Route>\n//     <Route path=\"/\" element={<HomePage />} />\n//     <Route path=\"/products\" element={<ProductsPage />} />\n//   </Route>\n// );\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      // 부모 라우트의 경로에 대해 HomePage의 경로를 부모와 같게 설정하려면 \"\"으로도\n      // 설정할 수 있지만 index 라우트를 사용해도 된다.\n      { path: \"\", element: <HomePage /> },\n      {\n        path: \"products\",\n        element: <ProductsPage />,\n      },\n      { path: \"products/:productId\", element: <ProductDetailPage /> },\n\n      // { path: \"/\", element: <HomePage /> }, /가 있으면 절대 경로, 없으면 상대경로\n      // {\n      //   path: \"/products\",\n      //   element: <ProductsPage />,\n      // },\n      // { path: \"/products/:productId\", element: <ProductDetailPage /> },\n    ],\n  },\n]);\n\n// const router = createBrowserRouter(routeDefinitions);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA,SACEA,mBAAmB,EACnBC,cAAc,EACdC,wBAAwB,EACxBC,KAAK,QACA,kBAAkB;AACzB,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAOC,iBAAiB,MAAM,uBAAuB;;AAErD;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGX,mBAAmB,CAAC,CACjC;EACEY,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACJ,UAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,YAAY,eAAER,OAAA,CAACH,SAAS;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC3BE,QAAQ,EAAE;EACR;EACA;EACA;IAAEP,IAAI,EAAE,EAAE;IAAEC,OAAO,eAAEH,OAAA,CAACN,QAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACnC;IACEL,IAAI,EAAE,UAAU;IAChBC,OAAO,eAAEH,OAAA,CAACL,YAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC1B,CAAC,EACD;IAAEL,IAAI,EAAE,qBAAqB;IAAEC,OAAO,eAAEH,OAAA,CAACF,iBAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;;EAE9D;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC,CACF,CAAC;;AAEF;;AAEA,SAASG,GAAGA,CAAA,EAAG;EACb,oBAAOV,OAAA,CAACT,cAAc;IAACU,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACI,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}