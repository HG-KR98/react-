{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uD5CC\\uADDC\\\\Desktop\\\\\\uB9AC\\uC561\\uD2B8 \\uACF5\\uBD80\\\\react-\\\\react-route-upgrade\\\\frontend\\\\src\\\\components\\\\EventItem.js\",\n  _s = $RefreshSig$();\nimport { Link, useSubmit } from \"react-router-dom\";\nimport classes from \"./EventItem.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventItem({\n  event\n}) {\n  _s();\n  const submit = useSubmit();\n  function startDeleteHandler() {\n    const proceed = window.confirm(\"Are you sure?\");\n    if (proceed) {\n      // 첫번째 인자 데이터 (자동으로 폼 데이터 객체로 감싸진다.)\n      // 하지만 삭제 부분에서는 데이터가 필요하지 않기 떄문에 null 처리\n      // 두번째 인자는 우리가 폼에 설정할 수 있는 것과 기본적으로 같은 값들을 설정할 수 있게 해준다.\n      // 만일 액션이 다른 라우트 경로에서 정의된다면 우린 action 키를 다른 경로로 설정할 수 있다.\n      // 하지만 지금 상황은 이 컴포넌트가 속한 라우트가 같거나 이 컴포넌트가 렌더링되는 라우트와 같은 라우트에서 정의되므로 액션 경로를 추가할 필요가 없다.\n      submit(null, {\n        method: \"delete\"\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: classes.event,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: event.image,\n      alt: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n      children: event.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: event.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"menu\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"edit\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startDeleteHandler,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(EventItem, \"/qFIYzOq2OE/SSM69ffcyD0/sOE=\", false, function () {\n  return [useSubmit];\n});\n_c = EventItem;\nexport default EventItem;\nvar _c;\n$RefreshReg$(_c, \"EventItem\");","map":{"version":3,"names":["Link","useSubmit","classes","jsxDEV","_jsxDEV","EventItem","event","_s","submit","startDeleteHandler","proceed","window","confirm","method","className","children","src","image","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","date","description","actions","to","onClick","_c","$RefreshReg$"],"sources":["C:/Users/김헌규/Desktop/리액트 공부/react-/react-route-upgrade/frontend/src/components/EventItem.js"],"sourcesContent":["import { Link, useSubmit } from \"react-router-dom\";\nimport classes from \"./EventItem.module.css\";\n\nfunction EventItem({ event }) {\n  const submit = useSubmit();\n  function startDeleteHandler() {\n    const proceed = window.confirm(\"Are you sure?\");\n\n    if (proceed) {\n      // 첫번째 인자 데이터 (자동으로 폼 데이터 객체로 감싸진다.)\n      // 하지만 삭제 부분에서는 데이터가 필요하지 않기 떄문에 null 처리\n      // 두번째 인자는 우리가 폼에 설정할 수 있는 것과 기본적으로 같은 값들을 설정할 수 있게 해준다.\n      // 만일 액션이 다른 라우트 경로에서 정의된다면 우린 action 키를 다른 경로로 설정할 수 있다.\n      // 하지만 지금 상황은 이 컴포넌트가 속한 라우트가 같거나 이 컴포넌트가 렌더링되는 라우트와 같은 라우트에서 정의되므로 액션 경로를 추가할 필요가 없다.\n      submit(null, { method: \"delete\" });\n    }\n  }\n\n  return (\n    <article className={classes.event}>\n      <img src={event.image} alt={event.title} />\n      <h1>{event.title}</h1>\n      <time>{event.date}</time>\n      <p>{event.description}</p>\n      <menu className={classes.actions}>\n        <Link to=\"edit\">Edit</Link>\n        {/* 굳이 Form을 사용해서 요청을 보낼 수 있지만 사용하지 않는 이유는 위의 startDeleteHandler 함수의\n        프롬프트를 출력을 하여 사용자에게 선택의 기회를 주기 위해 일반 button을 사용하였다.   */}\n        <button onClick={startDeleteHandler}>Delete</button>\n      </menu>\n    </article>\n  );\n}\n\nexport default EventItem;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,OAAOC,OAAO,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,SAASA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,SAASQ,kBAAkBA,CAAA,EAAG;IAC5B,MAAMC,OAAO,GAAGC,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC;IAE/C,IAAIF,OAAO,EAAE;MACX;MACA;MACA;MACA;MACA;MACAF,MAAM,CAAC,IAAI,EAAE;QAAEK,MAAM,EAAE;MAAS,CAAC,CAAC;IACpC;EACF;EAEA,oBACET,OAAA;IAASU,SAAS,EAAEZ,OAAO,CAACI,KAAM;IAAAS,QAAA,gBAChCX,OAAA;MAAKY,GAAG,EAAEV,KAAK,CAACW,KAAM;MAACC,GAAG,EAAEZ,KAAK,CAACa;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3CnB,OAAA;MAAAW,QAAA,EAAKT,KAAK,CAACa;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBnB,OAAA;MAAAW,QAAA,EAAOT,KAAK,CAACkB;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzBnB,OAAA;MAAAW,QAAA,EAAIT,KAAK,CAACmB;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnB,OAAA;MAAMU,SAAS,EAAEZ,OAAO,CAACwB,OAAQ;MAAAX,QAAA,gBAC/BX,OAAA,CAACJ,IAAI;QAAC2B,EAAE,EAAC,MAAM;QAAAZ,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAG3BnB,OAAA;QAAQwB,OAAO,EAAEnB,kBAAmB;QAAAM,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAChB,EAAA,CA7BQF,SAAS;EAAA,QACDJ,SAAS;AAAA;AAAA4B,EAAA,GADjBxB,SAAS;AA+BlB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}